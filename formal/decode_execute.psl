vunit i_decode_execute(decode_execute(synthesis))
{

   -- set all declarations to run on clk
   default clock is rising_edge(clk_i);


   --------------------------------------------
   -- INTERNAL ASSERTIONS
   --------------------------------------------


   ---------------------------------------
   -- PROPERTIES OF THE OUTPUT INTERFACE
   ---------------------------------------

   f_fetch_double : assert always {fetch_double_o and not fetch_double_i} |-> {not fetch_ready_o};

   f_mem_req_stable : assert always {mem_req_valid_o and not mem_req_ready_i and not rst_i} |=>
      {stable(mem_req_op_o) and stable(mem_req_addr_o) and stable(mem_req_data_o)};

   f_mem_src_ready_stable : assert always {mem_src_ready_o and not mem_src_valid_i and not rst_i} |=> {stable(mem_src_ready_o)};
   f_mem_dst_ready_stable : assert always {mem_dst_ready_o and not mem_dst_valid_i and not rst_i} |=> {stable(mem_dst_ready_o)};


   -----------------------------
   -- ASSUMPTIONS ABOUT INPUTS
   -----------------------------

   -- Always start in reset
   assume rst_i;

   --assume always {fetch_ready_o} |=> {stable(fetch_data_i(15 downto 0))};


   --------------------------------------------
   -- COVER STATEMENTS TO VERIFY REACHABILITY
   --------------------------------------------


   ----------------------------------------------
   -- ADDITIONAL ASSERTS NEEDED FOR K-INDUCTION
   ----------------------------------------------


   ----------------------------------------------
   -- ADDITIONAL ASSUMES HELPFUL WHEN DEBUGGING
   ----------------------------------------------

} -- vunit i_decode(decode(synthesis))

